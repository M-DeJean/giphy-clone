{"version":3,"sources":["components/Details/Details.js"],"names":["Details","props","useState","details","setDetails","data","useSelector","state","gifs","useEffect","id","match","params","gif","filter","className","length","alt","src","user","avatar_url","href","profile_url","target","rel","display_name","username","url","title","images","original","webp","onClick","navigator","clipboard","writeText","width","height","frames"],"mappings":"6PAOe,SAASA,EAAQC,GAAO,MAILC,mBAAS,IAJJ,mBAI5BC,EAJ4B,KAInBC,EAJmB,KAQ3BC,EAASC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAApCH,KASR,OAPAI,qBAAU,WAEN,IAAMC,EAAKT,EAAMU,MAAMC,OAAOF,GACxBG,EAAMR,EAAKS,QAAO,SAAAD,GAAG,OAAIA,EAAIH,KAAOA,KAC1CN,EAAWS,KACZ,CAACR,EAAMJ,EAAMU,MAAMC,OAAOF,KAGzB,yBAAKK,UAAU,WACVZ,EAAQa,OACL,yBAAKD,UAAU,QACX,yBAAKA,UAAU,QACX,yBACIE,IAAI,cACJC,IAAKf,EAAQ,GAAGgB,KAAOhB,EAAQ,GAAGgB,KAAKC,WAAa,KAExD,uBAAGC,KAAMlB,EAAQ,GAAGgB,KAAOhB,EAAQ,GAAGgB,KAAKG,YAAc,GACrDC,OAAO,SACPC,IAAI,uBAEHrB,EAAQ,GAAGgB,KAAOhB,EAAQ,GAAGgB,KAAKM,cAAgBtB,EAAQ,GAAGgB,KAAKO,SAAW,iBAGtF,yBAAKX,UAAU,gBACX,4BACI,uBAAGM,KAAMlB,EAAQ,GAAGwB,IAChBJ,OAAO,SACPC,IAAI,uBAEHrB,EAAQ,GAAGyB,OAAS,UAG7B,yBAAKV,IAAKf,EAAQ,GAAG0B,OAAOC,SAASC,KACjCd,IAAKd,EAAQ,GAAGyB,QACpB,uBAAGb,UAAU,OAAOiB,QAAS,WAAQC,UAAUC,UAAUC,UAAUhC,EAAQ,GAAG0B,OAAOC,SAASH,OAA9F,kBAIJ,yBAAKZ,UAAU,YACX,0CACiBZ,EAAQ,GAAG0B,OAAOC,SAASM,MAD5C,MACsDjC,EAAQ,GAAG0B,OAAOC,SAASO,OADjF,OAGA,sCACalC,EAAQ,GAAG0B,OAAOC,SAASQ,UAI9C","file":"static/js/4.1558880d.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport GiphyContext from '../../context/GiphyContext';\nimport { store } from '../../store/store'\nimport { useSelector } from 'react-redux';\nimport './Details.css'\nimport { useSearchGifsQuery } from '../../services/gifs';\n\nexport default function Details(props) {\n\n    // const context = useContext(GiphyContext)\n\n    const [details, setDetails] = useState([])\n\n    // console.log(useSelector((state) => state.gifs.queries))\n\n    const { data } = useSelector(state => state.gifs)\n\n    useEffect(() => {\n        // const { data } = context\n        const id = props.match.params.id\n        const gif = data.filter(gif => gif.id === id)\n        setDetails(gif)\n    }, [data, props.match.params.id])\n\n    return (\n        <div className=\"details\">\n            {details.length ?\n                <div className='info'>\n                    <div className='user'>\n                        <img\n                            alt='user avatar'\n                            src={details[0].user ? details[0].user.avatar_url : ''}\n                        />\n                        <a href={details[0].user ? details[0].user.profile_url : ''}\n                            target='_blank'\n                            rel=\"noopener noreferrer\"\n                        >\n                            {details[0].user ? details[0].user.display_name || details[0].user.username : 'No User Data'}\n                        </a>\n                    </div>\n                    <div className='detailed-gif'>\n                        <h2>\n                            <a href={details[0].url}\n                                target='_blank'\n                                rel='noopener noreferrer'\n                            >\n                                {details[0].title || 'GIPHY'}\n                            </a>\n                        </h2>\n                        <img src={details[0].images.original.webp}\n                            alt={details[0].title} />\n                        <p className='copy' onClick={() => { navigator.clipboard.writeText(details[0].images.original.url) }}>\n                            Copy GIF Link\n                        </p>\n                    </div>\n                    <div className='gif-data'>\n                        <p>\n                            Dimensions: {details[0].images.original.width} x {details[0].images.original.height} px\n                        </p>\n                        <p>\n                            Frames: {details[0].images.original.frames}\n                        </p>\n                    </div>\n                </div>\n                : <p>LOADING GIFS</p>}\n        </div>\n    )\n}"],"sourceRoot":""}