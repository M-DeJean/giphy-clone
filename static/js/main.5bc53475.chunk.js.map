{"version":3,"sources":["api/api.js","api/api-service.js","store/giphy.js","components/App/App.js","store/store.js","index.js"],"names":["ApiService","searchGif","search","fetch","api","then","res","ok","json","e","Promise","reject","getTrending","getRandom","slice","createSlice","name","initialState","data","history","reducers","getGifs","state","action","payload","getSearch","getHistory","actions","fetchGifs","dispatch","a","console","error","message","searchGifs","searchHistory","Header","React","lazy","Search","Details","App","className","fallback","Route","exact","path","component","props","reducer","combineReducers","gifs","store","configureStore","ReactDOM","createRoot","document","getElementById","render","BrowserRouter"],"mappings":"yQAAe,EACG,iCCoDHA,EAnDI,CACfC,UADe,SACLC,GACN,OAAOC,MAAM,GAAD,OAAIC,EAAJ,6DAAyEF,EAAzE,wCACPG,MAAK,SAAAC,GAAG,OACHA,EAAIC,GAEAD,EAAIE,OADJF,EAAIE,OAAOH,MAAK,SAAAI,GAAC,OAAIC,QAAQC,OAAOF,UAKtDG,YAVe,WAWX,OAAOT,MAAM,GAAD,OAAIC,EAAJ,wEACPC,MAAK,SAAAC,GAAG,OACHA,EAAIC,GAEAD,EAAIE,OADJF,EAAIE,OAAOH,MAAK,SAAAI,GAAC,OAAIC,QAAQC,OAAOF,UAItDI,UAlBe,WAmBX,OAAOV,MAAM,GAAD,OAAIC,EAAJ,kEACPC,MAAK,SAAAC,GAAG,OACHA,EAAIC,GAEAD,EAAIE,OADJF,EAAIE,OAAOH,MAAK,SAAAI,GAAC,OAAIC,QAAQC,OAAOF,WCpBpDK,EAAQC,YAAY,CACtBC,KAAM,OACNC,aAAc,CACVC,KAAM,GACNC,QAAS,IAEbC,SAAU,CACNC,QAAS,SAACC,EAAOC,GACbD,EAAMJ,KAAOK,EAAOC,SAExBC,UAAW,SAACH,EAAOC,GACfD,EAAMJ,KAAOK,EAAOC,SAExBX,UAAW,SAACS,EAAOC,GACfD,EAAMJ,KAAOK,EAAOC,SAExBE,WAAY,SAACJ,EAAOC,GAChBD,EAAMH,QAAN,CAAiBI,EAAOC,SAAxB,mBAAoCF,EAAMH,c,GAKvCL,MAAf,QAGsDA,EAAMa,SAApDN,E,EAAAA,QAASI,E,EAAAA,UAAsBC,G,EAAXb,U,EAAWa,YAE1BE,EAAY,yDAAM,WAAMC,GAAN,SAAAC,EAAA,+EAEjB9B,EAAWY,cACZP,MAAM,SAAAC,GAAG,OAAIuB,EAASR,EAAQf,EAAIY,UAHhB,+EAMfa,QAAQC,MAAM,KAAEC,UAND,wDAAN,uDAUZC,EAAa,SAAChC,GAAD,8CAAY,WAAM2B,GAAN,SAAAC,EAAA,+EAExB9B,EAAWC,UAAUC,GACtBG,MAAM,SAAAC,GAAG,OAAIuB,EAASJ,EAAUnB,EAAIY,UAHX,+EAMtBa,QAAQC,MAAM,KAAEC,UANM,wDAAZ,uDAoBbE,EAAgB,SAACjC,GAAD,OAAY,SAAA2B,GACrC,OAAOA,EAASH,EAAWxB,O,yKC1DzBkC,G,MAASC,IAAMC,MAAK,kBAAM,iCAC1BC,EAASF,IAAMC,MAAK,kBAAM,gCAC1BE,EAAUH,IAAMC,MAAK,kBAAM,gCAClB,SAASG,IAEtB,OAEE,0BAAMC,UAAU,OACd,kBAAC,WAAD,CACEC,SAAU,uBAAGD,UAAU,6BACvB,kBAACN,EAAD,MACA,kBAACQ,EAAA,EAAD,CACEC,OAAK,EACLC,KAAM,WACNC,UAAW,SAACC,GAAD,OAAW,kBAACT,EAAWS,MAEpC,kBAACJ,EAAA,EAAD,CACEC,OAAK,EACLC,KAAM,YACNC,UAAW,SAACC,GAAD,OAAW,kBAACR,EAAYQ,Q,0BClBvCC,EAAUC,YAAgB,CAC5BC,WAQWC,EAJDC,YAAe,CACzBJ,Y,cCHJK,IAASC,WAAWC,SAASC,eAAe,SAASC,OACjD,kBAACC,EAAA,EAAD,KACQ,kBAAC,IAAD,CAAUP,MAAOA,GACjB,kBAAC,EAAD,W","file":"static/js/main.5bc53475.chunk.js","sourcesContent":["export default {\n    API_ENDPOINT: 'https://api.giphy.com/v1/gifs/'\n}\n","import api from './api'\n\nconst ApiService = {\n    searchGif(search) {\n        return fetch(`${api.API_ENDPOINT}search?api_key=rh9A0IPelrZe4QsSjqs3HADbh0MTylva&q=${search}&limit=25&offset=0&rating=g&lang=en`)\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n\n    getTrending() {\n        return fetch(`${api.API_ENDPOINT}trending?api_key=rh9A0IPelrZe4QsSjqs3HADbh0MTylva&limit=25&rating=g`)\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    getRandom() {\n        return fetch(`${api.API_ENDPOINT}random?api_key=rh9A0IPelrZe4QsSjqs3HADbh0MTylva&tag=&rating=g`)\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    }\n}\n\nexport const suspend = promise => {\n    let result\n    let status = 'pending'\n    const suspender = promise.then(res => {\n        status = 'success'\n        result = res\n    }, error => {\n        status = 'error'\n        result = error\n    })\n\n    return () => {\n        switch(status) {\n            case 'pending':\n                throw suspender\n            case 'error':\n                throw result\n            default:\n                return result\n        }\n    }\n}\n\nexport default ApiService\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport ApiService from '../api/api-service'\n\n//Slice\nconst slice = createSlice({\n    name: 'gifs',\n    initialState: {\n        data: [],\n        history: []\n    },\n    reducers: {\n        getGifs: (state, action) => {\n            state.data = action.payload\n        },\n        getSearch: (state, action) => {\n            state.data = action.payload\n        },\n        getRandom: (state, action) => {\n            state.data = action.payload\n        },\n        getHistory: (state, action) => {\n            state.history = [action.payload, ...state.history]\n        }\n    }\n})\n\nexport default slice.reducer\n\n//Actions\nconst { getGifs, getSearch, getRandom, getHistory } = slice.actions\n\nexport const fetchGifs = () => async dispatch => {\n    try {\n        await ApiService.getTrending()\n            .then((res => dispatch(getGifs(res.data))))\n    }\n    catch (e) {\n        return (console.error(e.message))\n    }\n}\n\nexport const searchGifs = (search) => async dispatch => {\n    try {\n        await ApiService.searchGif(search)\n            .then((res => dispatch(getSearch(res.data))))\n    }\n    catch (e) {\n        return (console.error(e.message))\n    }\n}\n\nexport const randomGifs = () => async dispatch => {\n    try{\n        await ApiService.getRandom()\n            .then((res => dispatch(getRandom(res.data))))\n    }\n    catch (e) {\n        return(console.error(e.message))\n    }\n}\n\nexport const searchHistory = (search) => dispatch => {\n    return dispatch(getHistory(search))\n}\n\n\n","import React, { Suspense } from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css'\n//Lazy loading components in order for Suspense to work\nconst Header = React.lazy(() => import('../Header/Header'))\nconst Search = React.lazy(() => import('../Search/Search'))\nconst Details = React.lazy(() => import('../Details/Details'))\nexport default function App() {\n\n  return (\n    //Wrapping components in Suspense with spinner fallback\n    <main className='App'>\n      <Suspense\n        fallback={<i className=\"fas fa-spinner fa-pulse\"></i>}>\n        <Header />\n        <Route\n          exact\n          path={'/:search'}\n          component={(props) => <Search {...props} />}\n        />\n        <Route\n          exact\n          path={'/:url/:id'}\n          component={(props) => <Details {...props} />}\n        />\n      </Suspense>\n    </main>\n  );\n}","import { configureStore } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport gifs from './giphy'\n\n//Using combineReducers case more reducers are added in the future\nconst reducer = combineReducers({\n    gifs,\n})\n\n//Setting up redux store\nconst store = configureStore({\n    reducer,\n})\n\nexport default store","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport  store  from './store/store'\nimport { Provider } from 'react-redux'\nimport './index.css';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n    <BrowserRouter>\n            <Provider store={store}> \n            <App />\n            </Provider>\n    </BrowserRouter>);\n"],"sourceRoot":""}