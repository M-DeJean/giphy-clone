{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Details/Details.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","Details","props","useState","details","setDetails","data","useSelector","state","gifs","useEffect","id","match","params","gif","filter","className","alt","src","user","avatar_url","href","profile_url","target","rel","display_name","username","url","title","images","original","webp","onClick","navigator","clipboard","writeText","width","height","frames"],"mappings":"uKAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,8IIDvF,SAASC,EAAQC,GAAO,MAELC,mBAAS,IAFJ,mBAE5BC,EAF4B,KAEnBC,EAFmB,KAK3BC,EAASC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAApCH,KASR,OAPAI,qBAAU,WACN,IAAMC,EAAKT,EAAMU,MAAMC,OAAOF,GAExBG,EAAMR,EAAKS,QAAO,SAAAD,GAAG,OAAIA,EAAIH,KAAOA,KAC1CN,EAAWS,KACZ,CAACR,EAAMJ,EAAMU,MAAMC,OAAOF,KAGzB,yBAAKK,UAAU,WACVZ,EAAQP,OACL,yBAAKmB,UAAU,QACX,yBAAKA,UAAU,QACX,yBACIC,IAAI,cACJC,IAAKd,EAAQ,GAAGe,KAAOf,EAAQ,GAAGe,KAAKC,WAAa,KAExD,uBAAGC,KAAMjB,EAAQ,GAAGe,KAAOf,EAAQ,GAAGe,KAAKG,YAAc,GACrDC,OAAO,SACPC,IAAI,uBAEHpB,EAAQ,GAAGe,KAAOf,EAAQ,GAAGe,KAAKM,cAAgBrB,EAAQ,GAAGe,KAAKO,SAAW,iBAGtF,yBAAKV,UAAU,gBACX,4BACI,uBAAGK,KAAMjB,EAAQ,GAAGuB,IAChBJ,OAAO,SACPC,IAAI,uBAEHpB,EAAQ,GAAGwB,OAAS,UAG7B,yBAAKV,IAAKd,EAAQ,GAAGyB,OAAOC,SAASC,KACjCd,IAAKb,EAAQ,GAAGwB,QACpB,uBAAGZ,UAAU,OAAOgB,QAAS,WAAQC,UAAUC,UAAUC,UAAU/B,EAAQ,GAAGyB,OAAOC,SAASH,OAA9F,kBAIJ,yBAAKX,UAAU,YACX,0CACiBZ,EAAQ,GAAGyB,OAAOC,SAASM,MAD5C,MACsDhC,EAAQ,GAAGyB,OAAOC,SAASO,OADjF,OAGA,sCACajC,EAAQ,GAAGyB,OAAOC,SAASQ,UAI9C","file":"static/js/4.e3ba1813.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport './Details.css'\n\nexport default function Details(props) {\n    //Saving filtered gif in state to use for individual view\n    const [details, setDetails] = useState([])\n\n    //Accessing data from redux store\n    const { data } = useSelector(state => state.gifs)\n\n    useEffect(() => {\n        const id = props.match.params.id\n        //Filtering out individual gif based on ID in url\n        const gif = data.filter(gif => gif.id === id)\n        setDetails(gif)\n    }, [data, props.match.params.id])\n\n    return (\n        <div className=\"details\">\n            {details.length ?\n                <div className='info'>\n                    <div className='user'>\n                        <img\n                            alt='user avatar'\n                            src={details[0].user ? details[0].user.avatar_url : ''}\n                        />\n                        <a href={details[0].user ? details[0].user.profile_url : ''}\n                            target='_blank'\n                            rel=\"noopener noreferrer\"\n                        >\n                            {details[0].user ? details[0].user.display_name || details[0].user.username : 'No User Data'}\n                        </a>\n                    </div>\n                    <div className='detailed-gif'>\n                        <h2>\n                            <a href={details[0].url}\n                                target='_blank'\n                                rel='noopener noreferrer'\n                            >\n                                {details[0].title || 'GIPHY'}\n                            </a>\n                        </h2>\n                        <img src={details[0].images.original.webp}\n                            alt={details[0].title} />\n                        <p className='copy' onClick={() => { navigator.clipboard.writeText(details[0].images.original.url) }}>\n                            Copy GIF Link\n                        </p>\n                    </div>\n                    <div className='gif-data'>\n                        <p>\n                            Dimensions: {details[0].images.original.width} x {details[0].images.original.height} px\n                        </p>\n                        <p>\n                            Frames: {details[0].images.original.frames}\n                        </p>\n                    </div>\n                </div>\n                : <p>LOADING GIFS</p>}\n        </div>\n    )\n}"],"sourceRoot":""}