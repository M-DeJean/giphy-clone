{"version":3,"sources":["api/api-service.js","components/App/App.js","index.js","api/api.js","context/GiphyContext.js","services/gifs.js","store/store.js","store/giphy.js"],"names":["ApiService","searchGif","search","fetch","api","API_ENDPOINT","then","res","ok","json","e","Promise","reject","getTrending","getRandom","Header","React","lazy","Search","Details","App","className","fallback","Route","exact","path","component","props","ReactDOM","createRoot","document","getElementById","render","BrowserRouter","store","GiphyContext","createContext","data","details","setError","clearError","setData","setDetails","GiphyProvider","useState","value","error","Provider","children","gifAPI","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getGifs","query","searchGifs","useGetGifsQuery","useSearchGifsQuery","reducer","combineReducers","gifs","configureStore","slice","createSlice","name","initialState","history","reducers","state","action","payload","getSearch","getHistory","actions","fetchGifs","dispatch","a","console","message","searchHistory"],"mappings":"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","file":"static/js/main.9b30f9c6.chunk.js","sourcesContent":["import api from './api'\n\nconst ApiService = {\n    searchGif(search) {\n        return fetch(`${api.API_ENDPOINT}search?api_key=rh9A0IPelrZe4QsSjqs3HADbh0MTylva&q=${search}&limit=25&offset=0&rating=g&lang=en`)\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n\n    getTrending() {\n        return fetch(`${api.API_ENDPOINT}trending?api_key=rh9A0IPelrZe4QsSjqs3HADbh0MTylva&limit=25&rating=g`)\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    },\n    getRandom() {\n        return fetch(`${api.API_ENDPOINT}random?api_key=rh9A0IPelrZe4QsSjqs3HADbh0MTylva&tag=&rating=g`)\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n    }\n}\n\nexport const suspend = promise => {\n    let result\n    let status = 'pending'\n    const suspender = promise.then(res => {\n        status = 'success'\n        result = res\n    }, error => {\n        status = 'error'\n        result = error\n    })\n\n    return () => {\n        switch(status) {\n            case 'pending':\n                throw suspender\n            case 'error':\n                throw result\n            default:\n                return result\n        }\n    }\n}\n\n// const ApiService = {\n//     searchGifs: suspend(Apis.searchGif()),\n//     getTrending: suspend(Apis.getTrending()),\n//     getRandom: suspend(Apis.getRandom())\n    \n// }\n\n// const suspend = promise => {\n//     let result;\n//     let status = 'pending';\n//     const suspender = promise.then(response => {\n//         status = 'success';\n//         result = response;\n//     }, error => {\n//         status = 'error';\n//         result = error;\n//     });\n// }\n\nexport default ApiService","import React, { Suspense } from 'react';\n// import Header from '../Header/Header'\n// import Header from '../Header/Header';\n// import Search from '../Search/Search';\n// import Details from '../Details/Details'\nimport { Route } from 'react-router-dom';\nimport { useGetGifsQuery } from '../../services/gifs';\nimport './App.css'\nconst Header = React.lazy(() => import('../Header/Header'))\nconst Search = React.lazy(() => import('../Search/Search'))\nconst Details = React.lazy(() => import('../Details/Details'))\nexport default function App() {\n\n  return (\n    <main className='App'>\n      <Suspense\n        fallback={<i className=\"fas fa-spinner fa-pulse\"></i>}>\n        <Header />\n        <Route\n          exact\n          path={'/:search'}\n          component={(props) => <Search {...props} />}\n        />\n        {/* <Route\n          exact\n          path={'/trending'}\n          component={(props) => <Trending {...props} />}\n        /> */}\n        <Route\n          exact\n          path={'/:url/:id'}\n          component={(props) => <Details {...props} />}\n        />\n      </Suspense>\n    </main>\n  );\n}","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport { GiphyProvider } from './context/GiphyContext';\nimport App from './components/App/App';\nimport  store  from './store/store'\nimport { Provider } from 'react-redux'\nimport './index.css';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n    <BrowserRouter>\n        <GiphyProvider>\n            <Provider store={store}> \n            <App />\n            </Provider>\n        </GiphyProvider>\n    </BrowserRouter>);\n","export default {\n    API_ENDPOINT: 'https://api.giphy.com/v1/gifs/'\n}\n","import React, { Component, useState } from 'react';\n\nconst GiphyContext = React.createContext({\n    data: [],\n    details: [],\n    setError: () => { },\n    clearError: () => { },\n    setData: () => { },\n    setDetails: () => { }\n})\n\nexport default GiphyContext\n\nexport function GiphyProvider(props) {\n\n    const [data, setData] = useState([])\n    const [details, setDetails] = useState([])\n    const [error, setError] = useState(null)\n    // state = {\n    //     data: [],\n    //     details: [],\n    //     error: null\n    // };\n\n    // setError = error => {\n    //     console.error(error)\n    //     this.setState({ error })\n    // }\n\n    // clearError = () => {\n    //     this.setState({ error: null })\n    // }\n\n    // setData = data => {\n    //     this.setState({ data })\n    // }\n\n    // setDetails = details => {\n    //     this.setState({ details })\n    // }\n\n\n        const value = {\n            data,\n            details,\n            error,\n            setError,\n            // clearError: this.clearError,\n            setData,\n            setDetails\n        }\n        return(\n            <GiphyContext.Provider value={value}>\n                {props.children}\n            </GiphyContext.Provider>\n        )\n    }","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const gifAPI = createApi({\n    reducerPath: 'gifs',\n    baseQuery: fetchBaseQuery({\n        baseUrl: 'https://api.giphy.com/v1/gifs'\n    }),\n    endpoints: (builder) => ({\n        getGifs: builder.query({\n            query: () => 'trending?api_key=rh9A0IPelrZe4QsSjqs3HADbh0MTylva&limit=25&rating=g'\n        }),\n        searchGifs: builder.query({\n            query: (search) => `search?api_key=rh9A0IPelrZe4QsSjqs3HADbh0MTylva&q=${search}&limit=25&offset=0&rating=g&lang=en`\n        })\n\n    })\n})\n\nexport const { useGetGifsQuery, useSearchGifsQuery } = gifAPI","import { configureStore } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport { setupListeners } from \"@reduxjs/toolkit/dist/query\";\nimport { gifAPI } from \"../services/gifs\";\nimport gifs from './giphy'\nimport { config } from \"@fortawesome/fontawesome-svg-core\";\nimport { configure } from \"@testing-library/dom\";\n\n// export const store = configureStore({\n//     reducer: {\n//         [gifAPI.reducerPath]: gifAPI.reducer,\n//     },\n//     middleware: (getDefaultMiddleware) =>\n//         getDefaultMiddleware().concat(gifAPI.middleware)\n// })\n\n// setupListeners(store.dispatch)\n\nconst reducer = combineReducers({\n    gifs,\n})\n\nconst store = configureStore({\n    reducer,\n})\n\nexport default store","import { createSlice } from \"@reduxjs/toolkit\";\nimport { createApi } from \"@reduxjs/toolkit/dist/query\";\nimport { api } from '../api/api'\nimport ApiService from '../api/api-service'\nimport { suspend } from \"../api/api-service\";\n// import suspend from '../api/api-service'\n\n//Slice\nconst slice = createSlice({\n    name: 'gifs',\n    initialState: {\n        data: [],\n        history: []\n    },\n    reducers: {\n        getGifs: (state, action) => {\n            state.data = action.payload\n        },\n        getSearch: (state, action) => {\n            state.data = action.payload\n        },\n        getRandom: (state, action) => {\n            state.data = action.payload\n        },\n        getHistory: (state, action) => {\n            state.history = [action.payload, ...state.history]\n        }\n    }\n})\n\nexport default slice.reducer\n\n//Actions\nconst { getGifs, getSearch, getRandom, getHistory } = slice.actions\n\nexport const fetchGifs = () => async dispatch => {\n    try {\n        await ApiService.getTrending()\n            .then((res => dispatch(getGifs(res.data))))\n    }\n    catch (e) {\n        return (console.error(e.message))\n    }\n}\n\nexport const searchGifs = (search) => async dispatch => {\n    try {\n        await ApiService.searchGif(search)\n            .then((res => dispatch(getSearch(res.data))))\n    }\n    catch (e) {\n        return (console.error(e.message))\n    }\n}\n\nexport const randomGifs = () => async dispatch => {\n    try{\n        await ApiService.getRandom()\n            .then((res => dispatch(getRandom(res.data))))\n    }\n    catch (e) {\n        return(console.error(e.message))\n    }\n}\n\nexport const searchHistory = (search) => dispatch => {\n    return dispatch(getHistory(search))\n}\n\n\n"],"sourceRoot":""}